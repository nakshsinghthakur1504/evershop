#!/usr/bin/env node
/* eslint-disable global-require */
const yargs = require('yargs/yargs');
const { hideBin } = require('yargs/helpers');

const { argv } = yargs(hideBin(process.argv));
const command = argv._[0];

try {
  if (command === 'build') {
    process.env.NODE_ENV = 'production';
    require('./build/index');
  } else if (command === 'dev') {
    process.env.NODE_ENV = 'development';
    require('./dev');
  } else if (command === 'start') {
    process.env.NODE_ENV = 'production';
    require('./start');
  } else if (command === 'install') {
    require('./install');
  } else if (command === 'user:create') {
    require('./user/create');
  } else if (command === 'user:changePassword') {
    require('./user/changePassword');
  } else {
    throw new Error('Invalid command');
  }
} catch (e) {
  const { error } = require('../src/lib/log/logger');
  error(e);
}
const { error } = require('../src/lib/log/logger');
process.on('uncaughtException', function (exception) {
  error(exception);
});
process.on('unhandledRejection', (reason, p) => {
  error(`Unhandled Rejection: ${reason} at: ${p}`);
});
